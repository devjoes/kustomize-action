on:
  push:
    branches:
    - master
    # TODO: remove
    - re-write
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - run: npm install
    - run: npm run all
      env:
        KUSTOMIZE_PLUGIN_HOME: /tmp/kustomize
    - run: npm run package
    - name: Commit dist
      run: |
        set -x
        msg="Commiting dist"
        git config --global user.name "$GITHUB_ACTOR"
        git config --global user.email action@github.com
        git add ./dist -f
        if [[ -z $(git status --porcelain) ]]; then
          echo "No changes."
          exit 0
        fi
        git fetch --unshallow
        if [[ "$(git log -n 1 | tail -n 1)" =~ "$msg" ]]; then
          exit 0 # this shouldn't happen - but prevent it recursively commiting forever
        fi
        git commit -m "$msg"
        git push origin HEAD:$GITHUB_REF
  example:
    runs-on: ubuntu-latest
    steps:
    - name: Setup environment. We ideally you would use a private github runner and not have to do this
      run: |
        export KUSTOMIZE_PLUGIN_HOME=/tmp/kustomize; mkdir -p $KUSTOMIZE_PLUGIN_HOME
        printenv
        (command -v kubeval && command -v kustomize && command -v helm) || (
        tmp="$(mktemp -d)";cd "$tmp"
        wget https://get.helm.sh/helm-v3.4.1-linux-amd64.tar.gz &
        wget https://github.com/instrumenta/kubeval/releases/download/0.15.0/kubeval-linux-amd64.tar.gz &
        wget https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv3.5.4/kustomize_v3.5.4_linux_amd64.tar.gz &
        wait < <( jobs -p)
        for t in *.tar.gz; do
          tar xvzf $t
        done;
        sudo mv kubeval kustomize linux-amd64/helm /usr/bin/
        cd -
        rm -Rf "$tmp"
        )
    # To use this repository's private action,
    # you must check out the repository
    - name: Checkout
      uses: actions/checkout@v2
    - name: Run action
      uses: ./
      id: test
      with:
        who-to-greet: 'Mona the Octocat'
    # Use the output from the `hello` step
    - name: Get the output time
      run: echo "The time was ${{ steps.hello.outputs.time }}"
