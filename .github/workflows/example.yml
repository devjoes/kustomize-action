# This is a basic workflow to help you get started with Actions

name: Example

on:
  push:
    branches: [ master ]
    paths:
      - example
      - .github
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Setup environment. We ideally you would use a private github runner and not have to do this
        run: |
          export KUSTOMIZE_PLUGIN_HOME=/tmp/kustomize; mkdir -p $KUSTOMIZE_PLUGIN_HOME
          printenv
          (command -v kubeval && command -v kustomize && command -v helm) || (
          tmp="$(mktemp -d)";cd "$tmp"
          wget https://get.helm.sh/helm-v3.4.1-linux-amd64.tar.gz &
          wget https://github.com/instrumenta/kubeval/releases/download/0.15.0/kubeval-linux-amd64.tar.gz &
          wget https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv3.5.4/kustomize_v3.5.4_linux_amd64.tar.gz &
          wait < <( jobs -p)
          for t in *.tar.gz; do
            tar xvzf $t
          done;
          sudo mv kubeval kustomize linux-amd64/helm /usr/bin/
          cd -
          rm -Rf "$tmp"
          )
      - uses: actions/checkout@v2
        name: Checkout
      - name: kustomize-automation
        uses: ./ #devjoes/kustomize-action@v0.0.2
        with:
          kustomize-path: ./example/input/dev
          output-actions: '[{"type":"LoggerOutputAction","logErrors":true,"logYaml":false},{"type":"VariableOutputAction","outputVariableName":"yaml","errorsVariableName":"errors"},{"type":"FileOutputAction","createDirIfMissing":true,"fileOpenFlags":"w","dontOutputIfErrored":true,"fileName":"/tmp/output"}]'
          extra-resources: './example/output/test.yaml,./example/output/core-infra.yaml'
          verbose: true
